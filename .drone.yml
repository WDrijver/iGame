kind: pipeline
type: docker
name: compile-tests

workspace:
  path: /drone/src

steps:
- name: compile-m68k
  pull: always
  image: walkero/docker4amigavbcc:latest-m68k
  commands:
  - make -f Makefile.docker CPU=000
  - make -f Makefile.docker CPU=030
  - make -f Makefile.docker CPU=040
  - make -f Makefile.docker CPU=060
- name: compile-os4
  pull: always
  image: walkero/docker4amigavbcc:latest-ppc
  commands:
  - make -f Makefile.docker CPU=OS4
- name: compile-mos
  pull: always
  image: walkero/docker4amigavbcc:latest-mos
  commands:
  - make -f Makefile.docker CPU=MOS
- name: create-release-lha
  image: walkero/docker4amigavbcc:latest-m68k
  commands:
  - make -f Makefile.docker release
  depends_on:
  - compile-m68k
  - compile-os4
  - compile-mos
- name: Prepare test release
  image: walkero/docker4amigavbcc:latest-base
  environment:
    OS4DEPOT_PASSPHRASE:
      from_secret: OS4DEPOT_PASSPHRASE
  commands:
  - mkdir test-release
  - cp iGame--$(date +'%Y%m%d').lha ./test-release/iGame-$(date +'%Y%m%d%H%M').lha
  - sed -i "s/VERSION_TAG/nightly-$(date +'%Y%m%d%H%M')/" ./aminet.readme
  - sed -i "s/VERSION_TAG/nightly-$(date +'%Y%m%d%H%M')/" ./os4depot.readme
  - sed -i "s/OS4DEPOT_PASSPHRASE/$OS4DEPOT_PASSPHRASE/" ./os4depot.readme
  - cp os4depot.readme ./test-release/os4depot.readme
  - cp aminet.readme ./test-release/aminet.readme
  depends_on:
  - create-release-lha
- name: Upload to TEST FTP
  image: cschlosser/drone-ftps
  environment:
    FTP_USERNAME:
      from_secret: TESTFTP_USERNAME
    FTP_PASSWORD:
      from_secret: TESTFTP_PASSWORD
    PLUGIN_HOSTNAME: mediavault.amiga-projects.net:21
    PLUGIN_SRC_DIR: /test-release
    PLUGIN_DEST_DIR: ./web/betas
    PLUGIN_SECURE: "false"
    PLUGIN_VERIFY: "false"
    PLUGIN_CLEAN_DIR: "false"
  depends_on:
  - Prepare test release

trigger:
  branch:
    include:
    - master
    - develop
    - enh-drone
  event:
    include:
    - push
    - pull_request

---

kind: pipeline
type: docker
name: compile-release-bytag

workspace:
  path: /drone/src

steps:
- name: compile-m68k
  pull: always
  image: walkero/docker4amigavbcc:latest-m68k
  commands:
  - make -f Makefile.docker CPU=000
  - make -f Makefile.docker CPU=030
  - make -f Makefile.docker CPU=040
  - make -f Makefile.docker CPU=060
- name: compile-os4
  pull: always
  image: walkero/docker4amigavbcc:latest-ppc
  commands:
  - make -f Makefile.docker CPU=OS4
- name: compile-mos
  pull: always
  image: walkero/docker4amigavbcc:latest-mos
  commands:
  - make -f Makefile.docker CPU=MOS
- name: create-release-lha
  image: walkero/docker4amigavbcc:latest-m68k
  commands:
  - make -f Makefile.docker release
  depends_on:
  - compile-m68k
  - compile-os4
  - compile-mos
- name: deploy-all-binary
  image: plugins/github-release
  settings:
  api_key:
    from_secret: GITHUB_RELEASE_API_KEY
  files:
    - "iGame-*.lha"
  title: "iGame release ${DRONE_TAG}"
  depends_on:
  - create-release-lha

trigger:
  event:
    include:
    - tag
